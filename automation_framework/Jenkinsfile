pipeline {
	agent { 
		label 'java' 
	}
	
	stages {
		stage("build") {
			tools {
				gradle 'gradle4.10.2'
			}
			steps {
				sh 'echo Building with gradle'
				sh 'gradle -b automation_framework/build.gradle test check build'
			}
		}
		stage("Analyze results") {
			parallel {
				stage("Unit tests") {
					steps {
						sh 'touch automation_framework/build/test-results/test/*.xml'
						junit allowEmptyResults: true, testResults: '**/build/test-results/test/*.xml'
					}
				}
				stage("Find bugs") {
					steps {
						findbugs canComputeNew: false, defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', pattern: '**/build/reports/findbugs/*.xml', unHealthy: ''
					}
				}
				stage("Code coverage") {
					steps {
						jacoco sourceExclusionPattern: '*/test/**'
					}
				}
			}
		}
		stage("Workspace archive+cleanup") {
			steps {
				archiveArtifacts artifacts: '**/*.jar', excludes: '**/jacocoagent.jar', onlyIfSuccessful: true
				cleanWs()
			}
		}
	}
}